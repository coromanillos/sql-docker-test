Starts a container running postgres with folowing enviornment values.
------
docker run --name data-engineering-postgres -e POSTGRES_PASSWORD=secret -d postgres
------
# run a docker container named 'data-engineering-postgres'
docker run --name data-engineering-postgres
# add the enviornment values for a password 'secret', and run this application in daemon mode.
-e POSTGRES_PASSWORD=secret -d




docker exec -u postgres data-engineering-postgres createdb postgres-db
-------
# docker cmd used to run a command in a running docker container
docker exec 
# Flag specifies the user as admin privledged 'postgres'
-u postgres
# The name of the active running container.
data-engineering-postgres
# postgres cmd utility for creating a new database
createdb
# Name of the new database.
postgres-db


------
docker exec -it data-engineering-postgres psql -U postgres -d postgres-db
------
# Docker cmd used to execute commands, opens an Interactive Terminal 
# within the running container named data-engineering-postgres
docker exec -it data-engineering-postgres 

# Postgres cmd being executed within the container that launches the 
# interactive shell for postgres
psql

# Signs me in as user postgres, with afformentioned elevated privledges.
-U postgres

# Argument passed to psql shell that specified the database to conenct to
-d postgres-db


------
# Sidenote
------

# Nano kinda stinky since no multiline comments, but at least its really easy
# to work with via cli, so good enough for me i guess?

# In the command previously where you connect to a terminal and specify
# the username and db to connect to, you can just check the available users
# as well as available databases within the container as you would within
# a normal instance of postgrse. This command just saves time by doing it all
# in one go, since at the moment it is assumed you would remember the user and db.

# In practice, you might come back to it and not remember the username, which is the 
# minimum requirement to conenct via docker. In this case, you either consult the 
# documentation or pray to god the original creator used default 'postgres'.



# Starts the docker container.
# run & start are different. Run creates from an existing image, start creates from an 
# already existing container that was stopped.
docker start data-engineering-postgres 

# Connect to container...
docker exec -it data-engineering-postgres psql postres -d postgres-db

# Conencts to the docker container.
docker 
